class Solution {
    public int minSwaps(String s) {
        int unbalancedClosing = 0; // Initialize a count of unbalanced closing brackets
        int minSwaps = 0; // Initialize the minimum swaps needed to balance the string

        // Iterate through each character in the input string
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == '[') {
                unbalancedClosing++; // Increment unbalanced closing brackets count when an opening bracket is encountered
            } else {
                // If a closing bracket is encountered
                if (unbalancedClosing > 0) {
                    unbalancedClosing--; // Pair it with an opening bracket, reducing the unbalanced count
                } else {
                    minSwaps++; // If there's no opening bracket to pair with, increment the swaps count
                }
            }
        }

        return minSwaps; // Return the minimum swaps needed to balance the string
    }
}
